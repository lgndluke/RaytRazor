name: build

on:
  push:
    branches:
      - main
      - development
    paths:
      - '4. Software/4.1 Quellen/**'

jobs:
  build-pre-release:
    if: github.ref_name == 'development'
    name: Build & Deploy Pre-Release
    runs-on: windows-latest
    timeout-minutes: 60
    permissions:
      security-events: none
      packages: read
      actions: read
      contents: write

    strategy:
      fail-fast: true
      matrix:
        include:
          - language: c-cpp
            build-mode: manual

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Install RaytRazor Project dependencies.
        shell: pwsh
        run: |
          Write-Host "Installing Chocolatey"
          Set-ExecutionPolicy Bypass -Scope Process -Force;
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          
          Write-Host "Refreshing environmental variables"
          refreshenv
          
          Write-Host "Installing dependencies using Chocolatey"
          choco install -y cmake make mingw

      - name: Generate Version Syntax
        id: generate_version
        shell: pwsh
        run: |
          $VERSION_FILE = "4. Software/4.1 Quellen/RaytRazor/VERSION.DAT"
          $BUILD_NUMBER = $env:GITHUB_RUN_NUMBER
          if (Test-Path $VERSION_FILE) {
            $VERSION = Get-Content $VERSION_FILE
          } else {
            $VERSION="0.0.0"
          }
          $VERSION_PARTS = $VERSION -split '\.'
          $MAJOR = $VERSION_PARTS[0]
          $MINOR = $VERSION_PARTS[1]
          $PATCH = $VERSION_PARTS[2]
          $BUILD = "$BUILD_NUMBER"
          $FULL_VERSION = "$MAJOR.$MINOR.$PATCH.$BUILD"
          Write-Host "Build version: $FULL_VERSION"
          "version=$FULL_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

      - name: Build RaytRazor Project
        shell: pwsh
        run: |
          Write-Host "Creating build directory"
          New-Item -ItemType Directory -Path build
          
          Write-Host "Moving to build directory"
          Set-Location build
          
          Write-Host "Building Project"
          cmake "../4. Software/4.1 Quellen/RaytRazor" -G "MinGW Makefiles"
          mingw32-make
          
          Write-Host "Listing built folders/files"
          dir

      - name: Create release directory
        shell: pwsh
        run: |
          Write-Host "Changing back to the RaytRazor directory"
          Set-Location ..
          
          Write-Host "Creating release directory"
          New-Item -ItemType Directory -Path release
          
          Write-Host "Copying RaytRazor executable and other important files into the release directory"
          Copy-Item -Path "RaytRazor/build/RaytRazor.exe" -Destination "release/"
          Copy-Item -Path "D:/a/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor/resources/SDL2.dll" -Destination "release/"
          Copy-Item -Path "D:/a/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor/resources/logs/" -Destination "release/" -Recursive
          Copy-Item -Path "D:/a/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor/resources/scenes/" -Destination "release/" -Recursive

      - name: Deploy Pre-Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: RaytRazor-PreRelease-${{ env.version }}
          name: RaytRazor-PreRelease-${{ env.version }}
          target_commitish: development
          generate_release_notes: true
          append_body: true
          prerelease: true
          files: D:/a/RaytRazor/release/*

  build-release:
      if: github.ref_name == 'main'
      name: Build & Deploy Release
      runs-on: windows-latest
      timeout-minutes: 60
      permissions:
        security-events: none
        packages: read
        actions: read
        contents: write

      strategy:
        fail-fast: true
        matrix:
          include:
            - language: c-cpp
              build-mode: manual

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4.2.2

        - name: Install RaytRazor Project dependencies.
          shell: pwsh
          run: |
            Write-Host "Installing Chocolatey"
            Set-ExecutionPolicy Bypass -Scope Process -Force;
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
            iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

            Write-Host "Refreshing environmental variables"
            refreshenv

            Write-Host "Installing dependencies using Chocolatey"
            choco install -y cmake make mingw

        - name: Generate Version Syntax
          id: generate_version
          shell: pwsh
          run: |
            $VERSION_FILE = "4. Software/4.1 Quellen/RaytRazor/VERSION.DAT"
            $BUILD_NUMBER = $env:GITHUB_RUN_NUMBER
            if (Test-Path $VERSION_FILE) {
              $VERSION = Get-Content $VERSION_FILE
            } else {
              $VERSION="0.0.0"
            }
            $VERSION_PARTS = $VERSION -split '\.'
            $MAJOR = $VERSION_PARTS[0]
            $MINOR = $VERSION_PARTS[1]
            $PATCH = $VERSION_PARTS[2]
            $BUILD = "$BUILD_NUMBER"
            $FULL_VERSION = "$MAJOR.$MINOR.$PATCH.$BUILD"
            Write-Host "Build version: $FULL_VERSION"
            "version=$FULL_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

        - name: Build RaytRazor Project
          shell: pwsh
          run: |
            Write-Host "Creating build directory"
            New-Item -ItemType Directory -Path build

            Write-Host "Moving to build directory"
            Set-Location build

            Write-Host "Building Project"
            cmake "../4. Software/4.1 Quellen/RaytRazor" -G "MinGW Makefiles"
            mingw32-make

            Write-Host "Listing built folders/files"
            dir

        - name: Create release directory
          shell: pwsh
          run: |
            Write-Host "Changing back to the RaytRazor directory"
            Set-Location ..

            Write-Host "Creating release directory"
            New-Item -ItemType Directory -Path release

            Write-Host "Copying RaytRazor executable and other important files into the release directory"
            Copy-Item -Path "RaytRazor/build/RaytRazor.exe" -Destination "release/"
            Copy-Item -Path "D:/a/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor/resources/SDL2.dll" -Destination "release/"
            Copy-Item -Path "D:/a/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor/resources/logs/" -Destination "release/" -Recursive
            Copy-Item -Path "D:/a/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor/resources/scenes/" -Destination "release/" -Recursive

        - name: Deploy Release
          uses: softprops/action-gh-release@v2
          env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          with:
            tag_name: RaytRazor-${{ env.version }}
            name: RaytRazor-${{ env.version }}
            target_commitish: main
            generate_release_notes: true
            append_body: true
            prerelease: false
            files: D:/a/RaytRazor/release/*