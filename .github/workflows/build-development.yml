name: build-development

on:
  push:
    branches:
      - development_ui
    paths:
      - '4. Software/4.1 Quellen/**'

jobs:
  build:
    name: Build-Development
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      security-events: none
      packages: read
      actions: read
      contents: write

    strategy:
      fail-fast: true
      matrix:
        include:
          - language: c-cpp
            build-mode: manual

    steps:
      - name: Checkout Repository
        uses: actions/checkout@4.2.1

      - name: Install RaytRazor Project dependencies.
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxcursor-dev \
            libx11-dev \
            libxi-dev \
            libxext-dev \
            libxxf86vm-dev

      - name: Generate Version Syntax
        run: |
          VERSION_FILE="4. Software/4.1 Quellen/RaytRazor/VERSION.DAT"
          BUILD_NUMBER=$((GITHUB_RUN_NUMBER))
          if [ -f "$VERSION_FILE" ]; then
            VERSION=$(cat "$VERSION_FILE")
          else
            VERSION=1.0.0
          fi
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          BUILD="${BUILD_NUMBER}"
          FULL_VERSION="${MAJOR}.${MINOR}.${PATCH}.${BUILD}"
          echo "Build version: $FULL_VERSION"
          echo "version=$FULL_VERSION" >> $GITHUB_ENV
          echo $FULL_VERSION > "$VERSION_FILE"

      - name: Build RaytRazor Project
        run: |
          mkdir -p build
          cd build
          cmake "/home/runner/work/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor"
          make

      - name: Create release directory
        run: |
          mkdir -p release
          cp build/RaytRazor release/
          cp "/home/runner/work/RaytRazor/RaytRazor/4. Software/4.1 Quellen/RaytRazor/VERSION" release/version.txt

      - name: Upload Release
        uses: actions/upload-artifact@v4
        with:
          name: RaytRazor-PreRelease-${{ env.version }}
          path: release/

  deploy:
    name: Deploy Pre-Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Pre-Release
        id: create_prerelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: RaytRazor-PreRelease-${{ env.version }}
          release_name: RaytRazor-PreRelease-${{ env.version }}
          draft: false
          prerelease: true

      - name: Upload Pre-Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_prerelease.output.upload_url }}
          asset_path: release/RaytRazor
          asset_name: RaytRazor-${{ env.version }}.exe
          asset_content_type: application/octet-stream
